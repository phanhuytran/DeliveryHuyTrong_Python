# Generated by Django 3.2.6 on 2022-02-20 14:19

import cloudinary.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='avatar')),
                ('phone', models.CharField(max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default=0, max_length=10)),
                ('address', models.CharField(default=None, max_length=255, null=True)),
                ('date_of_birth', models.DateField(default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryProductShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Deduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('percent', models.FloatField(validators=[django.core.validators.MaxValueValidator(40.0), django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('seen', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_date', 'seen'],
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('discount', models.FloatField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'ordering': ['start_date', 'end_date'],
            },
        ),
        migrations.CreateModel(
            name='IDCard',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='abaShip.user')),
                ('id_card', models.CharField(max_length=12, unique=True)),
                ('image_card_front', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image_card_front')),
                ('image_card_back', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image_card_back')),
                ('mfg_date', models.DateTimeField()),
                ('exp_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=150)),
                ('name_represent_man', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=10)),
                ('customer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='stocks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('weight', models.FloatField(null=True)),
                ('is_finish', models.BooleanField(default=False)),
                ('category_product_ship', models.ManyToManyField(blank=True, null=True, related_name='posts', to='abaShip.CategoryProductShip')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receive_stock', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='posts_ship_receive', to='abaShip.stock')),
                ('send_stock', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='posts_ship_send', to='abaShip.stock')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, null=True, verbose_name='image')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_items', to='abaShip.post')),
            ],
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=14)),
                ('is_win', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auctions', to='abaShip.post')),
                ('shipper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auctions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['post'],
                'unique_together': {('post', 'shipper')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='notifications',
            field=models.ManyToManyField(blank=True, null=True, to='abaShip.Notification'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(null=True)),
                ('rate', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(limit_value=5, message='Đánh giá nhỏ hơn hoặc bằng 5'), django.core.validators.MinValueValidator(limit_value=1, message='Đánh giá từ 1 đến 5')])),
                ('customer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='customer_rate', to=settings.AUTH_USER_MODEL)),
                ('shipper', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='rate_shiper', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('customer', 'shipper')},
            },
        ),
        migrations.CreateModel(
            name='OrderShip',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('auction_win', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='order_ship', serialize=False, to='abaShip.auction')),
                ('active', models.BooleanField(default=True)),
                ('shipped_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'not yet shipped'), (1, 'shipping'), (2, 'shipped')], default=0)),
                ('pay_method', models.PositiveSmallIntegerField(choices=[(0, 'Zalo pay'), (1, 'Momo'), (2, 'Cash')], default=2)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payed', models.BooleanField(default=False)),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='abaShip.voucher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DebtShipper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_payed', models.BooleanField(default=False)),
                ('deduct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='abaShip.deduct')),
                ('shipper', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_ship', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='abaShip.ordership')),
            ],
        ),
        migrations.CreateModel(
            name='DebtApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_payed', models.BooleanField(default=False)),
                ('deduct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='abaShip.deduct')),
                ('shipper', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order_ship', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='abaShip.ordership')),
            ],
        ),
    ]
